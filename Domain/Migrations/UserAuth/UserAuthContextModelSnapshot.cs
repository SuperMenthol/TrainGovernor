// <auto-generated />
using Domain.Context.UserAuthContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations.UserAuth
{
    [DbContext(typeof(UserAuthContext))]
    partial class UserAuthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entity.UserAuth.Applications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.RolesForApplications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolesForApplications");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.UserBaseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserBaseInfo");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.UserPersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserPersonalInfo");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.UsersRolesForApplications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RoleForApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleForApplicationId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersRolesForApplications");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.RolesForApplications", b =>
                {
                    b.HasOne("Domain.Entity.UserAuth.Applications", "Application")
                        .WithMany("RolesForApplications")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.UserAuth.Roles", "Role")
                        .WithMany("RolesForApplications")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.UserPersonalInfo", b =>
                {
                    b.HasOne("Domain.Entity.UserAuth.UserBaseInfo", "User")
                        .WithOne("PersonalInfo")
                        .HasForeignKey("Domain.Entity.UserAuth.UserPersonalInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.UsersRolesForApplications", b =>
                {
                    b.HasOne("Domain.Entity.UserAuth.RolesForApplications", "RolesForApplication")
                        .WithMany("UsersRolesForApplications")
                        .HasForeignKey("RoleForApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.UserAuth.UserBaseInfo", "UserInfo")
                        .WithMany("RolesForApplications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolesForApplication");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.Applications", b =>
                {
                    b.Navigation("RolesForApplications");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.Roles", b =>
                {
                    b.Navigation("RolesForApplications");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.RolesForApplications", b =>
                {
                    b.Navigation("UsersRolesForApplications");
                });

            modelBuilder.Entity("Domain.Entity.UserAuth.UserBaseInfo", b =>
                {
                    b.Navigation("PersonalInfo")
                        .IsRequired();

                    b.Navigation("RolesForApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
